/**
     * 按excel格式取值
     *
     * @param cell             单元格
     * @param decimalPlacesNum 小数位数
     * @return 单元格值
     */
    public static String getCellValue(Cell cell, int decimalPlacesNum) {
        // 如果表格列无值
        if (cell == null) {
            // 返回空值
            return "";
        }
        String decimalPlaces = "#";
        for (int index = 0; index < decimalPlacesNum; index++) {
            if (index == 0) {
                decimalPlaces += ".#";
            }
            decimalPlaces += "#";
        }

        String cellValue = null;
        switch (cell.getCellType()) {
            case Cell.CELL_TYPE_STRING:
                cellValue = cell.getStringCellValue();
                break;

            case Cell.CELL_TYPE_NUMERIC:
                if (HSSFDateUtil.isCellDateFormatted(cell)) {
                    DateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
                    cellValue = String.valueOf(formater.format(cell.getDateCellValue()));
                } else {
                    DecimalFormat df = new DecimalFormat(decimalPlaces);
                    cellValue = String.valueOf(df.format(cell.getNumericCellValue()));
                }
                break;

            case Cell.CELL_TYPE_FORMULA:
                try {
                    cellValue = String.valueOf(cell.getNumericCellValue());
                } catch (IllegalStateException e) {
                    cellValue = String.valueOf(cell.getRichStringCellValue());
                }
                break;

            default:
                break;
        }
        return cellValue;
    }
